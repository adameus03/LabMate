FROM alpine:latest
ARG port=7890
RUN mkdir -p /opt/labmate

# install build tools
RUN apk add cmake make gcc g++ pkgconfig
#install LabMate dependencies
RUN apk add libuv libuv-dev openssl openssl-dev yyjson yyjson-dev libpq libpq-dev
#install the git version control system for cloning h2o
RUN apk add git
#install missing h2o dependencies
RUN apk add zlib zlib-dev
# ATTENTION: We don't install wslay as that will cause with our currently used h2o version [2.2.5] to produce a shared object with missing wslay symbols/code segments (see https://github.com/h2o/h2o/issues/2105 and https://github.com/h2o/h2o/pull/2196)
# In the future it is possible to switch to newer (post Dec 10, 2019) version of h2o and then perform the h2o build with wslay available - then 
#RUN apk add wslay wslay-dev

# BUILD AND INSTALL H2O
WORKDIR /opt
RUN git clone --depth 1 --branch v2.2.5 https://github.com/h2o/h2o.git
RUN mkdir h2o/build
WORKDIR /opt/h2o/build
RUN cmake -DWITH_MRUBY=OFF -DBUILD_SHARED_LIBS=ON -S .. -B .
RUN make
RUN make install

# BUILD AND INSTALL LIBBCRYPT
RUN apk add asciidoc
WORKDIR /opt
RUN git clone -b future https://github.com/rg3/libbcrypt.git
WORKDIR /opt/libbcrypt
RUN make
RUN make install
WORKDIR /usr/local/lib
RUN ln -s ../lib64/libbcrypt.a libbcrypt.a
RUN ln -s ../lib64/libbcrypt.so libbcrypt.so
RUN ln -s ../lib64/libbcrypt.so.1 libbcrypt.so.1
RUN ln -s ../lib64/libbcrypt.so.1.0.0 libbcrypt.so.1.0.0
WORKDIR /usr/local/lib/pkgconfig
RUN ln -s ../../lib64/pkgconfig/libbcrypt.pc libbcrypt.pc

# BUILD AND INSTALL PLIBSYS
WORKDIR /opt
RUN git clone --depth 1 --branch 0.0.5 https://github.com/saprykin/plibsys.git
RUN mkdir plibsys/build
WORKDIR /opt/plibsys/build
RUN cmake -S .. -B .
RUN make
RUN make install

# # BUILD AND INSTALL *US* (labserv aka LabMate)
# WORKDIR /opt/labmate
# COPY *.h *.c CMakeLists.txt ./
# COPY htdocs/ ./htdocs/
# WORKDIR /opt/labmate/build
# RUN cmake -S .. -B .
# RUN make

# # COPY SQL SCRIPTS
# WORKDIR /opt/labmate
# COPY sql/ ./sql/

# # START
# EXPOSE $port
# CMD ["./build/labserv"]