#ifndef R420_H
#define R420_H

#include <stdint.h>
#include <arpa/inet.h>

/* Message types (46) */
#define R420_MSG_TYPE_GET_SUPPORTED_VERSION 46
#define R420_MSG_TYPE_GET_SUPPORTED_VERSION_RESPONSE 56
#define R420_MSG_TYPE_SET_PROTOCOL_VERSION 47
#define R420_MSG_TYPE_SET_PROTOCOL_VERSION_RESPONSE 57
#define R420_MSG_TYPE_GET_READER_CAPABILITIES 1
#define R420_MSG_TYPE_GET_READER_CAPABILITIES_RESPONSE 11
#define R420_MSG_TYPE_ADD_ROSPEC 20
#define R420_MSG_TYPE_ADD_ROSPEC_RESPONSE 30
#define R420_MSG_TYPE_DELETE_ROSPEC 21
#define R420_MSG_TYPE_DELETE_ROSPEC_RESPONSE 31
#define R420_MSG_TYPE_START_ROSPEC 22
#define R420_MSG_TYPE_START_ROSPEC_RESPONSE 32
#define R420_MSG_TYPE_STOP_ROSPEC 23
#define R420_MSG_TYPE_STOP_ROSPEC_RESPONSE 33
#define R420_MSG_TYPE_ENABLE_ROSPEC 24
#define R420_MSG_TYPE_ENABLE_ROSPEC_RESPONSE 34
#define R420_MSG_TYPE_DISABLE_ROSPEC 25
#define R420_MSG_TYPE_DISABLE_ROSPEC_RESPONSE 35
#define R420_MSG_TYPE_GET_ROSPECS 26
#define R420_MSG_TYPE_GET_ROSPECS_RESPONSE 36
#define R420_MSG_TYPE_ADD_ACCESSSPEC 40
#define R420_MSG_TYPE_ADD_ACCESSSPEC_RESPONSE 50
#define R420_MSG_TYPE_DELETE_ACCESSSPEC 41
#define R420_MSG_TYPE_DELETE_ACCESSSPEC_RESPONSE 51
#define R420_MSG_TYPE_ENABLE_ACCESSSPEC 42
#define R420_MSG_TYPE_ENABLE_ACCESSSPEC_RESPONSE 52
#define R420_MSG_TYPE_DISABLE_ACCESSSPEC 43
#define R420_MSG_TYPE_DISABLE_ACCESSSPEC_RESPONSE 53
#define R420_MSG_TYPE_GET_ACCESSSPECS 44
#define R420_MSG_TYPE_GET_ACCESSSPECS_RESPONSE 54
#define R420_MSG_TYPE_CLIENT_REQUEST_OP 45
#define R420_MSG_TYPE_CLIENT_REQUEST_OP_RESPONSE 55
#define R420_MSG_TYPE_GET_REPORT 60
#define R420_MSG_TYPE_RO_ACCESS_REPORT 61
#define R420_MSG_TYPE_KEEPALIVE 62
#define R420_MSG_TYPE_KEEPALIVE_ACK 72
#define R420_MSG_TYPE_READER_EVENT_NOTIFICATION 63
#define R420_MSG_TYPE_ENABLE_EVENTS_AND_REPORTS 64
#define R420_MSG_TYPE_ERROR_MESSAGE 100
#define R420_MSG_TYPE_GET_READER_CONFIG 2
#define R420_MSG_TYPE_GET_READER_CONFIG_RESPONSE 12
#define R420_MSG_TYPE_SET_READER_CONFIG 3
#define R420_MSG_TYPE_SET_READER_CONFIG_RESPONSE 13
#define R420_MSG_TYPE_CLOSE_CONNECTION 14
#define R420_MSG_TYPE_CLOSE_CONNECTION_RESPONSE 4
#define R420_MSG_TYPE_CUSTOM_MESSAGE 1023


/* Parameter types (140) */
// General parameter types
#define R420_PARAM_TYPE_UTC_TIMESTAMP 128
#define R420_PARAM_TYPE_UPTIME 129

// Readaer device capabilities parameter types
#define R420_PARAM_TYPE_GENERAL_DEVICE_CAPABILITIES 137
#define R420_PARAM_TYPE_MAXIMUM_RECEIVE_SENSITIVITY 363
#define R420_PARAM_TYPE_RECEIVE_SENSITIVITY_TABLE_ENTRY 139
#define R420_PARAM_TYPE_PER_ANTENNA_RECEIVE_SENSITIVITY_RANGE 149
#define R420_PARAM_TYPE_PER_ANTENNA_AIR_PROTOCOL 140
#define R420_PARAM_TYPE_GPIO_CAPABILITIES 141
#define R420_PARAM_TYPE_LLRP_CAPABILITIES 142
//#define R420_PARAM_TYPE_AIR_PROTOCOL_LLRP_CAPABILITIES
#define R420_PARAM_TYPE_REGULATORY_CAPABILITIES 143
#define R420_PARAM_TYPE_UHF_BAND_CAPABILITIES 144
#define R420_PARAM_TYPE_TRANSMIT_POWER_LEVL_TABLE_ENTRY 145
#define R420_PARAM_TYPE_FREQUENCY_INFORMATION 146
#define R420_PARAM_TYPE_FREQUENCY_HOP_TABLE 147
#define R420_PARAM_TYPE_FIXED_FREQUENCY_TABLE 148
#define R420_PARAM_TYPE_RF_SURVEY_FREQUENCY_CAPABILITIES 365

// Reader operations parameter types
#define R420_PARAM_TYPE_ROSPEC 177
#define R420_PARAM_TYPE_RO_BOUNDARY_SPEC 178
#define R420_PARAM_TYPE_ROSPEC_START_TRIGGER 179
#define R420_PARAM_TYPE_PERIODIC_TRIGGER_VALUE 180
#define R420_PARAM_TYPE_GPI_TRIGGER_VALUE 181
#define R420_PARAM_TYPE_ROSPEC_STOP_TRIGGER 182
#define R420_PARAM_TYPE_AISPEC 183
#define R420_PARAM_TYPE_AISPEC_STOP_TRIGGER 184
#define R420_PARAM_TYPE_TAG_OBSERVATION_TRIGGER 185
#define R420_PARAM_TYPE_INVENTORY_PARAMETER_SPEC 186
#define R420_PARAM_TYPE_RF_SURVEY_SPEC 187
#define R420_PARAM_TYPE_RF_SURVEY_SPEC_STOP_TRIGGER 188
#define R420_PARAM_TYPE_LOOPSPEC 355

// Access operations parameter types
#define R420_PARAM_TYPE_ACCESSSPEC 207
#define R420_PARAM_TYPE_ACCESSSPEC_STOP_TRIGGER 208
#define R420_PARAM_TYPE_ACCESS_COMMAND 209
#define R420_PARAM_TYPE_CLIENT_REQUEST_OP_SPEC 210
#define R420_PARAM_TYPE_CLIENT_REQUEST_RESPONSE 211

// Configuration parameter types
#define R420_PARAM_TYPE_LLRP_CONFIGURATION_STATE_VALUE 217
#define R420_PARAM_TYPE_IDENTIFICATION 218
#define R420_PARAM_TYPE_GPO_WRITE_DATA 219
#define R420_PARAM_TYPE_KEEPALIVE_SPEC 220
#define R420_PARAM_TYPE_ANTENNA_PROPERTIES 221
#define R420_PARAM_TYPE_ANTENNA_CONFIGURATION 222
#define R420_PARAM_TYPE_RF_RECEIVER 223
#define R420_PARAM_TYPE_RF_TRANSMITTER 224
#define R420_PARAM_TYPE_GPI_PORT_CURRENT_STATE 225
#define R420_PARAM_TYPE_EVENTS_AND_REPORTS 226

// Reporting parameter types
#define R420_PARAM_TYPE_RO_REPORT_SPEC 237
#define R420_PARAM_TYPE_TAG_REPORT_CONTENT_SELECTOR 238
#define R420_PARAM_TYPE_ACCESS_REPORT_SPEC 239
#define R420_PARAM_TYPE_TAG_REPORT_DATA 240
#define R420_PARAM_TYPE_EPC_DATA 241
#define R420_PARAM_TYPE_EPC_96 13
#define R420_PARAM_TYPE_ROSPEC_ID 9
#define R420_PARAM_TYPE_SPEC_INDEX 14
#define R420_PARAM_TYPE_INVENTORY_PARAMETER_SPEC_ID 10
#define R420_PARAM_TYPE_ANTENNA_ID 1
#define R420_PARAM_TYPE_PEAK_RSSI 6
#define R420_PARAM_TYPE_CHANNEL_INDEX 7
#define R420_PARAM_TYPE_FIRST_SEEN_TIMESTAMP_UTC 2
#define R420_PARAM_TYPE_FIRST_SEEN_TIMESTAMP_UPTIME 3
#define R420_PARAM_TYPE_LAST_SEEN_TIMESTAMP_UTC 4
#define R420_PARAM_TYPE_LAST_SEEN_TIMESTAMP_UPTIME 5
#define R420_PARAM_TYPE_TAG_SEEN_COUNT 8
#define R420_PARAM_TYPE_CLIENT_REQUEST_OP_SPEC_RESULT 15
#define R420_PARAM_TYPE_ACCESSSPEC_ID 16
#define R420_PARAM_TYPE_C1G2_AUTHENTICATE_OPSPEC_RESULT 374
#define R420_PARAM_TYPE_C1G2_AUTH_COMM_OPSPEC_RESULT 375
#define R420_PARAM_TYPE_C1G2_SECURE_COMM_OPSEC_RESULT 376
#define R420_PARAM_TYPE_C1G2_READ_BUFFER_OPSPEC_RESULT 377
#define R420_PARAM_TYPE_C1G2_KEY_UPDATE_OPSPEC_RESULT 378
#define R420_PARAM_TYPE_C1G2_TAG_PRIVILEGE_OPSPEC_RESULT 379
#define R420_PARAM_TYPE_CRYPTO_RESPONSE 290
#define R420_PARAM_TYPE_RF_SURVEY_REPORT_DATA 242
#define R420_PARAM_TYPE_FREQUENCY_RSSI_LEVEL_ENTRY 243
#define R420_PARAM_TYPE_READER_EVENT_NOTIFICATION_SPEC 244
#define R420_PARAM_TYPE_EVENT_NOTIFICATION_STATE 245
#define R420_PARAM_TYPE_READER_EVENT_NOTIFICATION_DATA 246
#define R420_PARAM_TYPE_HOPPING_EVENT 247
#define R420_PARAM_TYPE_GPI_EVENT 248
#define R420_PARAM_TYPE_ROSPEC_EVENT 249
#define R420_PARAM_TYPE_REPORT_BUFFER_LEVEL_WARNING_EVENT 250
#define R420_PARAM_TYPE_REPORT_BUFFER_OVERFLOW_ERROR_EVENT 251
#define R420_PARAM_TYPE_READER_EXCEPTION_EVENT 252
#define R420_PARAM_TYPE_OPSPEC_ID 17
#define R420_PARAM_TYPE_RF_SURVEY_EVENT 253
#define R420_PARAM_TYPE_AISPEC_EVENT 254
#define R420_PARAM_TYPE_ANTENNA_EVENT 255
#define R420_PARAM_TYPE_CONNECTION_ATTEMPT_EVENT 256
#define R420_PARAM_TYPE_CONNECTION_CLOSE_EVENT 257
#define R420_PARAM_TYPE_SPEC_LOOP_EVENT 356

// LLRP error parameter types
#define R420_PARAM_TYPE_LLRP_STATUS 287
#define R420_PARAM_TYPE_FIELD_ERROR 288
#define R420_PARAM_TYPE_PARAMETER_ERROR 289
#define R420_PARAM_TYPE_CUSTOM_PARAMETER 1023

// Air protocol specific parameter types - capabilities parameter types
#define R420_PARAM_TYPE_C1G2_LLRP_CAPABILITIES 327
#define R420_PARAM_TYPE_UHF_C1G2_RF_MODE_TABLE 328
#define R420_PARAM_TYPE_C1G2_RF_MODE_TABLE_ENTRY 329

// Air protocol specific parameter types - reader operations parameter types
#define R420_PARAM_TYPE_C1G2_INVENTORY_COMMAND 330
#define R420_PARAM_TYPE_C1G2_FILTER 331
#define R420_PARAM_TYPE_C1G2_TAG_INVENTORY_MASK 332
#define R420_PARAM_TYPE_C1G2_TAG_INVENTORY_STATE_AWARE_FILTER_ACTION 333
#define R420_PARAM_TYPE_C1G2_TAG_INVENTORY_STATE_UNAWARE_FILTER_ACTION 334
#define R420_PARAM_TYPE_C1G2_RF_CONTROL 335
#define R420_PARAM_TYPE_C1G2_SINGULATION_CONTROL 336
#define R420_PARAM_TYPE_C1G2_TAG_INVENTORY_STATE_AWARE_SINGULATION_ACTION 337
#define R420_PARAM_TYPE_C1G2_CHALLENGE 366
#define R420_PARAM_TYPE_EXTENDED_ON_TIME 381

// Air protocol specific parameter types - access operations parameter types
#define R420_PARAM_TYPE_C1G2_TAG_SPEC 338
#define R420_PARAM_TYPE_C1G2_TARGET_TAG 339

// Air protocol specific parameter types - C1G2 opspecs parameter types
#define R420_PARAM_TYPE_C1G2_READ 341
#define R420_PARAM_TYPE_C1G2_WRITE 342
#define R420_PARAM_TYPE_C1G2_KILL 343
#define R420_PARAM_TYPE_C1G2_LOCK 344
#define R420_PARAM_TYPE_C1G2_LOCK_PAYLOAD 345
#define R420_PARAM_TYPE_C1G2_BLOCK_ERASE 346
#define R420_PARAM_TYPE_C1G2_BLOCK_WRITE 347
#define R420_PARAM_TYPE_C1G2_BLOCK_PERMALOCK 358
#define R420_PARAM_TYPE_C1G2_GET_BLOCK_PERMALOCK_STATUS 359
#define R420_PARAM_TYPE_C1G2_UNTRACABLE 380
#define R420_PARAM_TYPE_C1G2_AUTHENTICATE 367
#define R420_PARAM_TYPE_C1G2_AUTH_COMM 368
#define R420_PARAM_TYPE_C1G2_SECURE_COMM 369
#define R420_PARAM_TYPE_C1G2_READ_BUFFER 370
#define R420_PARAM_TYPE_C1G2_KEY_UPDATE 372
#define R420_PARAM_TYPE_C1G2_TAG_PRIVILEGE 373

// Air protocol specific parameter types - configuration parameter types

// Air protocol specific parameter types - reporting parameter types
#define R420_PARAM_TYPE_C1G2_MEMORY_SELECTOR 348
#define R420_PARAM_TYPE_C1G2_PC 12
#define R420_PARAM_TYPE_C1G2_XPC_W1 19
#define R420_PARAM_TYPE_C1G2_XPC_W2 20
#define R420_PARAM_TYPE_C1G2_CRC 11
#define R420_PARAM_TYPE_C1G2_SINGULATION_DETAILS 18
#define R420_PARAM_TYPE_C1G2_READ_OPSPEC_RESULT 349
#define R420_PARAM_TYPE_C1G2_WRITE_OPSPEC_RESULT 350
#define R420_PARAM_TYPE_C1G2_KILL_OPSPEC_RESULT 351
#define R420_PARAM_TYPE_C1G2_LOCK_OPSPEC_RESULT 352
#define R420_PARAM_TYPE_C1G2_BLOCK_ERASE_OPSPEC_RESULT 353
#define R420_PARAM_TYPE_C1G2_BLOCK_WRITE_OPSPEC_RESULT 354
#define R420_PARAM_TYPE_C1G2_BLOCK_PERMALOCK_OPSPEC_RESULT 361
#define R420_PARAM_TYPE_C1G2_GET_BLOCK_PERMALOCK_STATUS_OPSPEC_RESULT 362
#define R420_PARAM_TYPE_C1G2_UNTRACABLE_OPSPEC_RESULT 364

typedef struct r420_ctx {
  int fd;
} r420_ctx_t;

typedef struct r420_connection_parameters {
  uint32_t ip;
  uint16_t port;
} r420_connection_parameters_t;

typedef struct r420_msg_hdr {
  uint16_t attrs;
  uint32_t message_length;
  uint32_t message_id;
} __attribute__((__packed__)) r420_msg_hdr_t;

// reserved: bits 15-13
#define R420_MSG_HDR_RESERVED(hdr) ((ntohs((hdr).attrs) >> 13) & 0x7)
// version: bits 12-10
#define R420_MSG_HDR_VERSION(hdr) ((ntohs((hdr).attrs) >> 10) & 0x7)
// message type: bits 9-0
#define R420_MSG_HDR_MESSAGE_TYPE(hdr) (ntohs((hdr).attrs) & 0x3FF)
#define R420_MSG_HDR_MSG_LENGTH(hdr) (ntohl((hdr).message_length))
#define R420_MSG_HDR_MSG_ID(hdr) (ntohl((hdr).message_id))

// Loop callback function type
typedef void (*r420_loop_callback_t)(const r420_ctx_t *pCtx, const r420_msg_hdr_t *pHdr);

r420_ctx_t r420_connect(const r420_connection_parameters_t conn_params);

void r420_close(r420_ctx_t *pCtx);

r420_msg_hdr_t r420_receive_header(const r420_ctx_t *pCtx);

void r420_loop(const r420_ctx_t *pCtx, r420_loop_callback_t loop_handler);

#endif // R420_H